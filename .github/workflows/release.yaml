name: Release Workflow

on:
  schedule:
    - cron: '30 2 * * 5'

  workflow_dispatch:

jobs:
  release_branch:
    permissions:
      contents: write
      actions: read
      packages: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout codes
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GHVSA_PAT }}

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod

      - name: Configure Git
        run: |
          USERNAME=${{ github.actor }}
          echo "Fetching email for $USERNAME"
          EMAIL=$(curl -s -H "Authorization: token ${{ secrets.GHVSA_PAT }}" https://api.github.com/users/$USERNAME | jq -r '.email')
          if [ "$EMAIL" == "null" ]; then
            EMAIL="$USERNAME@users.noreply.github.com"
          fi
          echo "Using email: $EMAIL"
          echo "Using username: $USERNAME"
          git config --global user.email "$EMAIL"
          git config --global user.name "$USERNAME"

      - name: Run release logic
        id: release_logic_binary
        run: go run main.go tag release
        env:
          GH_PAT: ${{ secrets.GHVSA_PAT }}
          GITHUB_OUTPUT: $GITHUB_ENV

    outputs:
      rcTAG: ${{ steps.release_logic_binary.outputs.RC_TAG }}
      devTAG: ${{ steps.release_logic_binary.outputs.DEV_TAG }}
      rcBranch: ${{ steps.release_logic_binary.outputs.RC_BRANCH }}
      devBranch: ${{ steps.release_logic_binary.outputs.DEV_BRANCH }}

  print:
    needs: [release_branch]
    runs-on: ubuntu-latest
    steps:
      - name: Print RC and DEV tags
        run: |
          echo "RC Tag: ${{ needs.release_branch.outputs.rcTAG }}"
          echo "DEV Tag: ${{ needs.release_branch.outputs.devTAG }}"
          echo "RC Branch: ${{ needs.release_branch.outputs.rcBranch }}"
            echo "DEV Branch: ${{ needs.release_branch.outputs.devBranch }}"